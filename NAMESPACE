import(Matrix, MASS)
importFrom(stats,nobs,family)
importFrom(methods, "as")
importFrom(stats, ".checkMFClasses", "add.scope", "as.formula",
             "dbinom", "delete.response", "dgamma", "dpois",
             "drop.scope", "fitted", "formula", "gaussian", "getCall",
             "model.frame", "model.matrix", "model.offset",
             "model.response", "model.weights", "na.omit", "na.pass",
             "napredict", "pchisq", "pf", "pnorm", "pt", "terms",
             "update.default", "update.formula","extractAIC","logLik",
             "predict","model.frame.default",
             ".getXlevels","get_all_vars")


export(speedglm, speedlm, speedlm.fit, speedlm.wfit, update.speedlm,
       updateWithMoreData, shglm, speedglm.wfit, is.sparse, cp, control,
      	predict.speedlm, predict.speedglm)

S3method(summary,speedglm)
S3method(print,speedglm)
S3method(print,summary.speedglm)
S3method(print,logLik.speedglm)
S3method(AIC,speedglm)
S3method(extractAIC,speedlm)
S3method(extractAIC,speedglm)
S3method(coef,speedglm)
S3method(vcov,speedglm)
S3method(logLik,speedglm)
S3method(fitted,speedglm)
S3method(fitted,speedlm)
S3method(family,speedglm)
S3method(summary,speedlm)
S3method(print,speedlm)
S3method(print,summary.speedlm)
S3method(print,logLik.speedlm)
S3method(AIC,speedlm)
S3method(coef,speedlm)
S3method(vcov,speedlm)
S3method(logLik,speedlm)
S3method(update,speedlm)
S3method(add1,speedlm)
S3method(add1,speedglm)
S3method(drop1,speedlm)
S3method(drop1,speedglm)
S3method(predict,speedlm)
S3method(predict,speedglm)
S3method(nobs,speedlm)
S3method(nobs,speedglm)
S3method(model.frame,speedglm)
S3method(model.frame,speedlm)



